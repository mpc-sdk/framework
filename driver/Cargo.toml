[package]
name = "mpc-driver"
version = "0.7.0"
edition = "2021"
description = "Driver for round-based MPC protocols"
keywords = ["mpc", "tss", "relay", "crypto", "e2ee"]
license = "GPL-3.0"
repository = "https://github.com/mpc-sdk/framework"

[features]
cggmp = ["k256", "synedrion", "bip32"]
ecdsa = ["k256/ecdsa"]
eddsa = ["ed25519", "ed25519-dalek"]
frost-ed25519 = ["dep:frost-ed25519", "k256/ecdsa"]
schnorr = ["ed25519", "k256/schnorr"]
signers = ["ecdsa", "eddsa", "schnorr"]
protocols = ["cggmp", "frost-ed25519"]
full = ["protocols", "signers"]

[dependencies]
mpc-protocol = { version = "0.7", path = "../protocol" }
mpc-client = { version = "0.7", path = "../client" }
thiserror = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
sha3 = "0.10"
tracing = "0.1"
tokio = { version = "1", features = ["sync"] }
async-trait = "0.1"
futures = "0.3"
synedrion = { version = "0.2.0-pre.0", git = "https://github.com/entropyxyz/synedrion", rev = "b4ce49cb9376c913b7a81c0f899bd4837f3a1eb6", optional = true }
# synedrion = { version = "0.2.0-pre.0", git = "https://github.com/tmpfs/synedrion", branch = "update-crypto-bigint", optional = true }
k256 = { version = "0.13", default-features = false, features = ["pem", "serde", "std"], optional = true }
# enable `std` feature for error conversion
bip32 = { version = "0.5", features = ["std"], optional = true }
rand = "0.8"
ed25519 = { version = "2.2.3", optional = true }
ed25519-dalek = { version = "2", features = ["rand_core"], optional = true }
frost-ed25519 = { version = "2", optional = true }

# WASM

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
rand_core = { version = "0.6.4", features = ["getrandom"] }
wasm-bindgen = { version = "0.2" }

[build-dependencies]
rustc_version = "0.4.1"

[package.metadata.docs.rs]
all-features = true
